/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppVehiclesIndexImport } from './routes/_app/vehicles/index'
import { Route as AppUsersIndexImport } from './routes/_app/users/index'
import { Route as AppRequestsIndexImport } from './routes/_app/requests/index'
import { Route as AppCustomersIndexImport } from './routes/_app/customers/index'
import { Route as AppVehiclesCreateImport } from './routes/_app/vehicles/create'
import { Route as AppVehiclesIdImport } from './routes/_app/vehicles/$id'
import { Route as AppUsersMeImport } from './routes/_app/users/me'
import { Route as AppUsersCreateImport } from './routes/_app/users/create'
import { Route as AppRequestsCreateImport } from './routes/_app/requests/create'
import { Route as AppCustomersCreateImport } from './routes/_app/customers/create'
import { Route as AppCustomersIdImport } from './routes/_app/customers/$id'
import { Route as AppRequestsRequestIdVehicleIdImport } from './routes/_app/requests/$requestId.$vehicleId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AppVehiclesIndexRoute = AppVehiclesIndexImport.update({
  id: '/vehicles/',
  path: '/vehicles/',
  getParentRoute: () => AppRoute,
} as any)

const AppUsersIndexRoute = AppUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AppRoute,
} as any)

const AppRequestsIndexRoute = AppRequestsIndexImport.update({
  id: '/requests/',
  path: '/requests/',
  getParentRoute: () => AppRoute,
} as any)

const AppCustomersIndexRoute = AppCustomersIndexImport.update({
  id: '/customers/',
  path: '/customers/',
  getParentRoute: () => AppRoute,
} as any)

const AppVehiclesCreateRoute = AppVehiclesCreateImport.update({
  id: '/vehicles/create',
  path: '/vehicles/create',
  getParentRoute: () => AppRoute,
} as any)

const AppVehiclesIdRoute = AppVehiclesIdImport.update({
  id: '/vehicles/$id',
  path: '/vehicles/$id',
  getParentRoute: () => AppRoute,
} as any)

const AppUsersMeRoute = AppUsersMeImport.update({
  id: '/users/me',
  path: '/users/me',
  getParentRoute: () => AppRoute,
} as any)

const AppUsersCreateRoute = AppUsersCreateImport.update({
  id: '/users/create',
  path: '/users/create',
  getParentRoute: () => AppRoute,
} as any)

const AppRequestsCreateRoute = AppRequestsCreateImport.update({
  id: '/requests/create',
  path: '/requests/create',
  getParentRoute: () => AppRoute,
} as any)

const AppCustomersCreateRoute = AppCustomersCreateImport.update({
  id: '/customers/create',
  path: '/customers/create',
  getParentRoute: () => AppRoute,
} as any)

const AppCustomersIdRoute = AppCustomersIdImport.update({
  id: '/customers/$id',
  path: '/customers/$id',
  getParentRoute: () => AppRoute,
} as any)

const AppRequestsRequestIdVehicleIdRoute =
  AppRequestsRequestIdVehicleIdImport.update({
    id: '/requests/$requestId/$vehicleId',
    path: '/requests/$requestId/$vehicleId',
    getParentRoute: () => AppRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/customers/$id': {
      id: '/_app/customers/$id'
      path: '/customers/$id'
      fullPath: '/customers/$id'
      preLoaderRoute: typeof AppCustomersIdImport
      parentRoute: typeof AppImport
    }
    '/_app/customers/create': {
      id: '/_app/customers/create'
      path: '/customers/create'
      fullPath: '/customers/create'
      preLoaderRoute: typeof AppCustomersCreateImport
      parentRoute: typeof AppImport
    }
    '/_app/requests/create': {
      id: '/_app/requests/create'
      path: '/requests/create'
      fullPath: '/requests/create'
      preLoaderRoute: typeof AppRequestsCreateImport
      parentRoute: typeof AppImport
    }
    '/_app/users/create': {
      id: '/_app/users/create'
      path: '/users/create'
      fullPath: '/users/create'
      preLoaderRoute: typeof AppUsersCreateImport
      parentRoute: typeof AppImport
    }
    '/_app/users/me': {
      id: '/_app/users/me'
      path: '/users/me'
      fullPath: '/users/me'
      preLoaderRoute: typeof AppUsersMeImport
      parentRoute: typeof AppImport
    }
    '/_app/vehicles/$id': {
      id: '/_app/vehicles/$id'
      path: '/vehicles/$id'
      fullPath: '/vehicles/$id'
      preLoaderRoute: typeof AppVehiclesIdImport
      parentRoute: typeof AppImport
    }
    '/_app/vehicles/create': {
      id: '/_app/vehicles/create'
      path: '/vehicles/create'
      fullPath: '/vehicles/create'
      preLoaderRoute: typeof AppVehiclesCreateImport
      parentRoute: typeof AppImport
    }
    '/_app/customers/': {
      id: '/_app/customers/'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof AppCustomersIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/requests/': {
      id: '/_app/requests/'
      path: '/requests'
      fullPath: '/requests'
      preLoaderRoute: typeof AppRequestsIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/users/': {
      id: '/_app/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AppUsersIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/vehicles/': {
      id: '/_app/vehicles/'
      path: '/vehicles'
      fullPath: '/vehicles'
      preLoaderRoute: typeof AppVehiclesIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/requests/$requestId/$vehicleId': {
      id: '/_app/requests/$requestId/$vehicleId'
      path: '/requests/$requestId/$vehicleId'
      fullPath: '/requests/$requestId/$vehicleId'
      preLoaderRoute: typeof AppRequestsRequestIdVehicleIdImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppCustomersIdRoute: typeof AppCustomersIdRoute
  AppCustomersCreateRoute: typeof AppCustomersCreateRoute
  AppRequestsCreateRoute: typeof AppRequestsCreateRoute
  AppUsersCreateRoute: typeof AppUsersCreateRoute
  AppUsersMeRoute: typeof AppUsersMeRoute
  AppVehiclesIdRoute: typeof AppVehiclesIdRoute
  AppVehiclesCreateRoute: typeof AppVehiclesCreateRoute
  AppCustomersIndexRoute: typeof AppCustomersIndexRoute
  AppRequestsIndexRoute: typeof AppRequestsIndexRoute
  AppUsersIndexRoute: typeof AppUsersIndexRoute
  AppVehiclesIndexRoute: typeof AppVehiclesIndexRoute
  AppRequestsRequestIdVehicleIdRoute: typeof AppRequestsRequestIdVehicleIdRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppCustomersIdRoute: AppCustomersIdRoute,
  AppCustomersCreateRoute: AppCustomersCreateRoute,
  AppRequestsCreateRoute: AppRequestsCreateRoute,
  AppUsersCreateRoute: AppUsersCreateRoute,
  AppUsersMeRoute: AppUsersMeRoute,
  AppVehiclesIdRoute: AppVehiclesIdRoute,
  AppVehiclesCreateRoute: AppVehiclesCreateRoute,
  AppCustomersIndexRoute: AppCustomersIndexRoute,
  AppRequestsIndexRoute: AppRequestsIndexRoute,
  AppUsersIndexRoute: AppUsersIndexRoute,
  AppVehiclesIndexRoute: AppVehiclesIndexRoute,
  AppRequestsRequestIdVehicleIdRoute: AppRequestsRequestIdVehicleIdRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/login': typeof LoginRoute
  '/': typeof AppIndexRoute
  '/customers/$id': typeof AppCustomersIdRoute
  '/customers/create': typeof AppCustomersCreateRoute
  '/requests/create': typeof AppRequestsCreateRoute
  '/users/create': typeof AppUsersCreateRoute
  '/users/me': typeof AppUsersMeRoute
  '/vehicles/$id': typeof AppVehiclesIdRoute
  '/vehicles/create': typeof AppVehiclesCreateRoute
  '/customers': typeof AppCustomersIndexRoute
  '/requests': typeof AppRequestsIndexRoute
  '/users': typeof AppUsersIndexRoute
  '/vehicles': typeof AppVehiclesIndexRoute
  '/requests/$requestId/$vehicleId': typeof AppRequestsRequestIdVehicleIdRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/': typeof AppIndexRoute
  '/customers/$id': typeof AppCustomersIdRoute
  '/customers/create': typeof AppCustomersCreateRoute
  '/requests/create': typeof AppRequestsCreateRoute
  '/users/create': typeof AppUsersCreateRoute
  '/users/me': typeof AppUsersMeRoute
  '/vehicles/$id': typeof AppVehiclesIdRoute
  '/vehicles/create': typeof AppVehiclesCreateRoute
  '/customers': typeof AppCustomersIndexRoute
  '/requests': typeof AppRequestsIndexRoute
  '/users': typeof AppUsersIndexRoute
  '/vehicles': typeof AppVehiclesIndexRoute
  '/requests/$requestId/$vehicleId': typeof AppRequestsRequestIdVehicleIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/login': typeof LoginRoute
  '/_app/': typeof AppIndexRoute
  '/_app/customers/$id': typeof AppCustomersIdRoute
  '/_app/customers/create': typeof AppCustomersCreateRoute
  '/_app/requests/create': typeof AppRequestsCreateRoute
  '/_app/users/create': typeof AppUsersCreateRoute
  '/_app/users/me': typeof AppUsersMeRoute
  '/_app/vehicles/$id': typeof AppVehiclesIdRoute
  '/_app/vehicles/create': typeof AppVehiclesCreateRoute
  '/_app/customers/': typeof AppCustomersIndexRoute
  '/_app/requests/': typeof AppRequestsIndexRoute
  '/_app/users/': typeof AppUsersIndexRoute
  '/_app/vehicles/': typeof AppVehiclesIndexRoute
  '/_app/requests/$requestId/$vehicleId': typeof AppRequestsRequestIdVehicleIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/'
    | '/customers/$id'
    | '/customers/create'
    | '/requests/create'
    | '/users/create'
    | '/users/me'
    | '/vehicles/$id'
    | '/vehicles/create'
    | '/customers'
    | '/requests'
    | '/users'
    | '/vehicles'
    | '/requests/$requestId/$vehicleId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/'
    | '/customers/$id'
    | '/customers/create'
    | '/requests/create'
    | '/users/create'
    | '/users/me'
    | '/vehicles/$id'
    | '/vehicles/create'
    | '/customers'
    | '/requests'
    | '/users'
    | '/vehicles'
    | '/requests/$requestId/$vehicleId'
  id:
    | '__root__'
    | '/_app'
    | '/login'
    | '/_app/'
    | '/_app/customers/$id'
    | '/_app/customers/create'
    | '/_app/requests/create'
    | '/_app/users/create'
    | '/_app/users/me'
    | '/_app/vehicles/$id'
    | '/_app/vehicles/create'
    | '/_app/customers/'
    | '/_app/requests/'
    | '/_app/users/'
    | '/_app/vehicles/'
    | '/_app/requests/$requestId/$vehicleId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/login"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/",
        "/_app/customers/$id",
        "/_app/customers/create",
        "/_app/requests/create",
        "/_app/users/create",
        "/_app/users/me",
        "/_app/vehicles/$id",
        "/_app/vehicles/create",
        "/_app/customers/",
        "/_app/requests/",
        "/_app/users/",
        "/_app/vehicles/",
        "/_app/requests/$requestId/$vehicleId"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/customers/$id": {
      "filePath": "_app/customers/$id.tsx",
      "parent": "/_app"
    },
    "/_app/customers/create": {
      "filePath": "_app/customers/create.tsx",
      "parent": "/_app"
    },
    "/_app/requests/create": {
      "filePath": "_app/requests/create.tsx",
      "parent": "/_app"
    },
    "/_app/users/create": {
      "filePath": "_app/users/create.tsx",
      "parent": "/_app"
    },
    "/_app/users/me": {
      "filePath": "_app/users/me.tsx",
      "parent": "/_app"
    },
    "/_app/vehicles/$id": {
      "filePath": "_app/vehicles/$id.tsx",
      "parent": "/_app"
    },
    "/_app/vehicles/create": {
      "filePath": "_app/vehicles/create.tsx",
      "parent": "/_app"
    },
    "/_app/customers/": {
      "filePath": "_app/customers/index.tsx",
      "parent": "/_app"
    },
    "/_app/requests/": {
      "filePath": "_app/requests/index.tsx",
      "parent": "/_app"
    },
    "/_app/users/": {
      "filePath": "_app/users/index.tsx",
      "parent": "/_app"
    },
    "/_app/vehicles/": {
      "filePath": "_app/vehicles/index.tsx",
      "parent": "/_app"
    },
    "/_app/requests/$requestId/$vehicleId": {
      "filePath": "_app/requests/$requestId.$vehicleId.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
